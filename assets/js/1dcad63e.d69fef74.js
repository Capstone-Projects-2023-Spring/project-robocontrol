"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[8968],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,h=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(h,s(s({ref:t},l),{},{components:n})):o.createElement(h,s({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1639:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:1,title:"Sequence Diagrams"},s="Sequence Diagrams",i={unversionedId:"system-architecture/sequence-diagrams",id:"system-architecture/sequence-diagrams",title:"Sequence Diagrams",description:"Use Case 1",source:"@site/docs/system-architecture/sequence-diagrams.md",sourceDirName:"system-architecture",slug:"/system-architecture/sequence-diagrams",permalink:"/project-robocontrol/docs/system-architecture/sequence-diagrams",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Spring/project-robocontrol/edit/main/documentation/docs/system-architecture/sequence-diagrams.md",tags:[],version:"current",lastUpdatedBy:"Kevin W Jang",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Sequence Diagrams"},sidebar:"docsSidebar",previous:{title:"Class Diagrams",permalink:"/project-robocontrol/docs/system-architecture/class-diagrams"},next:{title:"API Specification",permalink:"/project-robocontrol/docs/category/api-specification"}},p={},c=[{value:"Use Case #1",id:"use-case-1",level:2},{value:"Use Case #2",id:"use-case-2",level:2},{value:"Use Case #3",id:"use-case-3",level:2},{value:"Use Case #4",id:"use-case-4",level:2},{value:"Use Case #5",id:"use-case-5",level:2}],l={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sequence-diagrams"},"Sequence Diagrams"),(0,r.kt)("h2",{id:"use-case-1"},"Use Case #1"),(0,r.kt)("p",null,"As a user, I want to be able to look for objects using the RoboControl\u2019s camera. "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The user powers on the RoboControl device. "),(0,r.kt)("li",{parentName:"ol"},"The user navigates to the control website. "),(0,r.kt)("li",{parentName:"ol"},"The user views the live camera feed on his/her device. "),(0,r.kt)("li",{parentName:"ol"},"The user exits the website and powers down the RoboControl device. ")),(0,r.kt)("mermaid",{value:'sequenceDiagram\n    actor U as User\n    participant App as :App\n    participant C as :Control\n    participant BG as :ButtonGrid\n    participant CV as opencv:OpenCV\n    participant R as :Robot\n    actor M as Motors\n\n    U->>App: Open App\n\n    loop VideoFeed\n        U->>+App: Click "CONTROL" button\n        App->>+C: Render\n        C->>+CV: Get video\n        CV->>+R: Get video\n        R--\x3e>-CV: Video feed\n        CV--\x3e>-C: Video feed\n        C--\x3e>-App: Video feed\n        App--\x3e>-U: Video Feed\n    end'}),(0,r.kt)("h2",{id:"use-case-2"},"Use Case #2"),(0,r.kt)("p",null,"As a user, I want to be able to control the robot so it is able to traverse through a custom obstacle course for entertainment."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The user powers on the RoboControl device. "),(0,r.kt)("li",{parentName:"ol"},"The user places the RoboControl in the desired starting position. "),(0,r.kt)("li",{parentName:"ol"},"The user navigates to the control website. "),(0,r.kt)("li",{parentName:"ol"},"The user uses the GUI with all the controls and maneuvers the robot through the course. "),(0,r.kt)("li",{parentName:"ol"},"The user exits the website and powers down the RoboControl device. ")),(0,r.kt)("mermaid",{value:'sequenceDiagram\n    actor U as User\n    participant App as :App\n    participant C as :Control\n    participant BG as :ButtonGrid\n    participant CV as opencv:OpenCV\n    participant R as :Robot\n    actor M as Motors\n\n    U->>App: Open App\n\n    loop VideoFeed\n        U->>+App: Click "CONTROL" button\n        App->>+C: Render\n        C->>+CV: Get video\n        CV->>+R: Get video\n        R--\x3e>-CV: Video feed\n        CV--\x3e>-C: Video feed\n        C--\x3e>-App: Video feed\n        App--\x3e>-U: Video Feed\n    end\n\n    loop Keyboard Listener:\n        U->>+C: Press key\n        C->>+BG: Send key data\n        BG->>+CV: WebSocket command\n        CV->>+R: WebSocket command\n        R->>+M: Move specified servo\n        Note right of U: Loop occurs while the user<br/>wants to keep controlling<br/>the robot\n        M->>-R: \n        R->>-CV: \n        CV->>-BG: \n        BG->>-C: \n        C->>-U: \n    end'}),(0,r.kt)("h2",{id:"use-case-3"},"Use Case #3"),(0,r.kt)("p",null,"As a user, I want the RoboControl to autonomously center and manuever through a track defined by painter\u2019s tape. "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The user powers on the RoboControl device. "),(0,r.kt)("li",{parentName:"ol"},"The user places the RoboControl in the desired starting position. "),(0,r.kt)("li",{parentName:"ol"},"The user navigates to the control website and enables \u2018Autonomous Mode\u2019. "),(0,r.kt)("li",{parentName:"ol"},"The RoboControl will automatically center and traverse through the course using computer vision. "),(0,r.kt)("li",{parentName:"ol"},"At the end of the course, the user disables \u2018Autonomous Mode\u2019, exits the website, and powers down the RoboControl device. ")),(0,r.kt)("mermaid",{value:'sequenceDiagram\n    actor U as User\n    participant App as :App\n    participant C as :Control\n    participant BG as :ButtonGrid\n    participant CV as opencv:OpenCV\n    participant R as :Robot\n    actor M as Motors\n\n    U->>App: Open App\n\n    loop VideoFeed\n        U->>+App: Click "CONTROL" button\n        App->>+C: Render\n        C->>+CV: Get video\n        CV->>+R: Get video\n        R--\x3e>-CV: Video feed\n        CV--\x3e>-C: Video feed\n        C--\x3e>-App: Video feed\n        App--\x3e>-U: Video Feed\n    end\n\n    U->>+BG: Click autonomous button\n\n    loop Autonomous:\n        R->>+CV: Video feed\n        CV->>CV: Image processing\n        CV->>-R: WebSocket command\n        R->>+M: Move motors\n        Note right of U: Loop accounts for<br/>autonomous movements\n    end'}),(0,r.kt)("h2",{id:"use-case-4"},"Use Case #4"),(0,r.kt)("p",null,"As a user, I want to control the robot while on vacation to confirm security measures are taken"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The user powers on the RoboControl device before leaving. "),(0,r.kt)("li",{parentName:"ol"},"The user, while on vacation, goes to ryanhodge.net"),(0,r.kt)("li",{parentName:"ol"},"The user enters a password to gain control of the robot"),(0,r.kt)("li",{parentName:"ol"},"The user begins to navigate the robot around the apartment"),(0,r.kt)("li",{parentName:"ol"},"The user raises and lowers the robot's camera to confirm that doors are not left ajar and lights are not on")),(0,r.kt)("mermaid",{value:'sequenceDiagram\n    actor U as User\n    participant App as :App\n    participant C as :Control\n    participant BG as :ButtonGrid\n    participant CV as opencv:OpenCV\n    participant R as :Robot\n    actor M as Motors\n\n    U->>App: Open App\n\n    loop VideoFeed\n        U->>+App: Click "CONTROL" button\n        App->>+C: Render\n        C->>+CV: Get video\n        CV->>+R: Get video\n        R--\x3e>-CV: Video feed\n        CV--\x3e>-C: Video feed\n        C--\x3e>-App: Video feed\n        App--\x3e>-U: Video Feed\n    end\n\n    loop Keyboard Listener:\n        U->>+C: Press key\n        C->>+BG: Send key data\n        BG->>+CV: WebSocket command\n        CV->>+R: WebSocket command\n        R->>+M: Move camera servo\n        Note right of U: Loop occurs while the user<br/>wants to keep controlling<br/>the robot\n        M->>-R: \n        R->>-CV: \n        CV->>-BG: \n        BG->>-C: \n        C->>-U: \n    end'}),(0,r.kt)("h2",{id:"use-case-5"},"Use Case #5"),(0,r.kt)("p",null,"As a user, I want to use a RoboControl to make a map of the surrounding area. "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The user powers on the RoboControl device. "),(0,r.kt)("li",{parentName:"ol"},"The user places the RoboControl in the desired starting position. "),(0,r.kt)("li",{parentName:"ol"},"The user navigates to the control website. "),(0,r.kt)("li",{parentName:"ol"},"The user views the live camera feed on his/her device. "),(0,r.kt)("li",{parentName:"ol"},"The user controls the robot to go to the desired area"),(0,r.kt)("li",{parentName:"ol"},"The user manually edits his/her map based on the landmarks discovered by the robot\u2019s camera."),(0,r.kt)("li",{parentName:"ol"},"The user controls the robot arm to leave new landmarks.  "),(0,r.kt)("li",{parentName:"ol"},"The user exits the website and powers down the RoboControl device.")),(0,r.kt)("mermaid",{value:'sequenceDiagram\n    actor U as User\n    participant App as :App\n    participant C as :Control\n    participant BG as :ButtonGrid\n    participant CV as opencv:OpenCV\n    participant R as :Robot\n    actor M as Motors\n\n    U->>App: Open App\n\n    loop VideoFeed\n        U->>+App: Click "CONTROL" button\n        App->>+C: Render\n        C->>+CV: Get video\n        CV->>+R: Get video\n        R--\x3e>-CV: Video feed\n        CV--\x3e>-C: Video feed\n        C--\x3e>-App: Video feed\n        App--\x3e>-U: Video Feed\n    end\n\n    loop Keyboard Listener:\n        U->>+C: Press key\n        C->>+BG: Send key data\n        BG->>+CV: WebSocket command\n        CV->>+R: WebSocket command\n        R->>+M: Move specified servo\n        Note right of U: Loop occurs while the user<br/>wants to keep controlling<br/>the robot\n        M->>-R: \n        R->>-CV: \n        CV->>-BG: \n        BG->>-C: \n        C->>-U: \n    end'}))}d.isMDXComponent=!0}}]);